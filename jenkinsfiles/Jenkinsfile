pipeline {
    agent {
        kubernetes {
            inheritFrom 'default'
            yaml '''
            spec:
              containers:
                - name: kaniko
                  image: gcr.io/kaniko-project/executor:debug
                  command:
                   - "sleep"
                  args:
                    - "999999"
                  securityContext:
                    capabilities:
                      add:
                        - "CHOWN"
                        - "DAC_OVERRIDE"
                        - "FOWNER"
                        - "SETFCAP"
                        - "SETGID"
                        - "SETUID"
                  volumeMounts:
                    - name: registry-credentials
                      mountPath: /kaniko/.docker
              restartPolicy: Never
              volumes:
                - name: registry-credentials
                  secret:
                    secretName: nexus3-k8s-lan-credentials
                    items:
                      - key: config.json
                        path: config.json
            '''
            defaultContainer 'kaniko'
        }
    }
    options {
        buildDiscarder(
            logRotator(numToKeepStr: '5')
        )
        timestamps()
        disableConcurrentBuilds()
        timeout(
            time: 1,
            unit: 'HOURS'
        )
        durabilityHint('PERFORMANCE_OPTIMIZED')
        ansiColor('xterm')
    }
    environment {
        PRIVATE_REGISTRY_ADDRESS = 'nexus3.k8s.lan:50000'
    }
    parameters {
        choice(
            choices: [
                'python-webdev',
                'jenkins-customagent',
                'redhat8-ansible',
                'ubuntu-ansible'
            ],
            description: 'Select Dockerfile to build',
            name: 'DOCKERFILE_TO_BUILD'
        )
        string(
            defaultValue: 'myimage:example',
            description: 'Name of output image in format image:tag',
            name: 'IMAGE_NAME_AND_TAG',
            trim: true
        )
        string(
            defaultValue: '',
            description: 'Path to context in repository if required by Dockerfile; leave empty if not required',
            name: 'CONTEXT_PATH',
            trim: true
        )
    }
    stages {
        /* Enable stage if you are not using multibranch pipeline
        stage('Pull Repository') {
            steps {
                git(
                    credentialsId: 'github-access-token-mrachuta',
                    url: 'https://github.com/mrachuta/dockerfiles.git'
                )
            }
        }
        */
        stage('Build image') {
            steps {
                script {
                    if (env.CONTEXT_PATH.length() == 0) {
                        env.CONTEXT_PATH_ARG = ''
                    } else {
                        env.CONTEXT_PATH_ARG = "--context=dir://${env.CONTEXT_PATH}"
                    }
                    sh """
                        /kaniko/executor --dockerfile="${DOCKERFILE_TO_BUILD}/Dockerfile" \
                        --destination="${PRIVATE_REGISTRY_ADDRESS}/${IMAGE_NAME_AND_TAG}" \
                        ${CONTEXT_PATH_ARG} --insecure --insecure-pull
                    """
                }
            }
        }
    }
}
